package com.mihapetr.socialnetwork.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProfileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileAllPropertiesEquals(Profile expected, Profile actual) {
        assertProfileAutoGeneratedPropertiesEquals(expected, actual);
        assertProfileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileAllUpdatablePropertiesEquals(Profile expected, Profile actual) {
        assertProfileUpdatableFieldsEquals(expected, actual);
        assertProfileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileAutoGeneratedPropertiesEquals(Profile expected, Profile actual) {
        assertThat(expected)
            .as("Verify Profile auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileUpdatableFieldsEquals(Profile expected, Profile actual) {
        assertThat(expected)
            .as("Verify Profile relevant properties")
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getPicture()).as("check picture").isEqualTo(actual.getPicture()))
            .satisfies(e ->
                assertThat(e.getPictureContentType()).as("check picture contenty type").isEqualTo(actual.getPictureContentType())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfileUpdatableRelationshipsEquals(Profile expected, Profile actual) {
        assertThat(expected)
            .as("Verify Profile relationships")
            .satisfies(e -> assertThat(e.getOthers()).as("check others").isEqualTo(actual.getOthers()))
            .satisfies(e -> assertThat(e.getChats()).as("check chats").isEqualTo(actual.getChats()))
            .satisfies(e -> assertThat(e.getProfiles()).as("check profiles").isEqualTo(actual.getProfiles()));
    }
}
