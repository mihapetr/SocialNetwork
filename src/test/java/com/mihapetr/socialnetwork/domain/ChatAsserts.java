package com.mihapetr.socialnetwork.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChatAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatAllPropertiesEquals(Chat expected, Chat actual) {
        assertChatAutoGeneratedPropertiesEquals(expected, actual);
        assertChatAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatAllUpdatablePropertiesEquals(Chat expected, Chat actual) {
        assertChatUpdatableFieldsEquals(expected, actual);
        assertChatUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatAutoGeneratedPropertiesEquals(Chat expected, Chat actual) {
        assertThat(expected)
            .as("Verify Chat auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatUpdatableFieldsEquals(Chat expected, Chat actual) {
        assertThat(expected)
            .as("Verify Chat relevant properties")
            .satisfies(e -> assertThat(e.getInitiatorName()).as("check initiatorName").isEqualTo(actual.getInitiatorName()))
            .satisfies(e -> assertThat(e.getAccepted()).as("check accepted").isEqualTo(actual.getAccepted()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatUpdatableRelationshipsEquals(Chat expected, Chat actual) {
        assertThat(expected)
            .as("Verify Chat relationships")
            .satisfies(e -> assertThat(e.getProfiles()).as("check profiles").isEqualTo(actual.getProfiles()));
    }
}
